version: "3.3"

services:

  api:
    build:
      context: .
    image: yurtarb:latest
    env_file: 
      - path: ./process.env
        required: true # default
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - redis
      - rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
 
  
  postgres:
    image: postgres:16.2
    restart: always
    env_file:
      - path: ./process.env
        required: true # default
    volumes:
      - "$HOME/docker/volumes/postgres:/var/lib/postgresql/data"

  
  pgadmin:
    image: dpage/pgadmin4:8.5
    environment:
      PGADMIN_DEFAULT_EMAIL: ddanill2907@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 82648264Ad
      PGADMIN_LISTEN_PORT: 80
    ports:
    - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
 
      
  redis:
    image: redis:alpine


  rabbitmq:
    image: rabbitmq:3


  greeter:
    build:
      context: .
    image: yurtarb:latest
    restart: always
    env_file:
      - path: ./process.env
        required: true # default
    environment:
      SERVICES: greeter
    depends_on:
      - redis
      - rabbitmq


  auth.service:
    build:
      context: .
    image: yurtarb:latest
    restart: always
    env_file:
      - path: ./process.env
        required: true # default
    environment:
      SERVICES: auth.service.js
    volumes:
      -  data:/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    links:
      - postgres:16.2
    depends_on:
      - redis
      - rabbitmq

  mail.service:
    build:
      context: .
    image: yurtarb:latest
    restart: always
    env_file:
      - path: ./process.env
        required: true # default
    environment:
      SERVICES: mail.service.js
    volumes:
      -  data:/data
    links:
      - postgres:16.2
    depends_on:
      - redis
      - rabbitmq
    expose:
      - 3030


  response.service:
    build:
      context: .
    image: yurtarb:latest
    restart: always
    env_file:
      - path: ./process.env
        required: true # default
    environment:
      SERVICES: response.service
    volumes:
      - data:/data
    links:
      - postgres:16.2
    depends_on:
      - redis
      - rabbitmq
    expose:
      - 3030


  token.service:
    build:
      context: .
    image: yurtarb:latest
    restart: always
    env_file:
      - path: ./process.env
        required: true # default
    environment:
      SERVICES: token.service.js
    volumes:
      -  data:/data
    links:
      - postgres:16.2
    depends_on:
      - redis
      - rabbitmq
    expose:
      - 3030

           
  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    links:
      - postgres:16.2


networks:
    yurtarb_yurtarb:
volumes:
  data:
  pgadmin: